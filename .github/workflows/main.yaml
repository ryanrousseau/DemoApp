name: Build and Push Docker Image

on:
  push:
    paths:
      - 'DemoApp/**'
      - '.github/workflows/main.yaml'
    branches:
      - main
  workflow_dispatch: {}

env:
  OCTOPUS_SPACE: New Cascadia Imports

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Set Version Number
      id: version-generator
      run: echo "version=$(date +'%Y.%m.%d').$GITHUB_RUN_NUMBER" >> $GITHUB_OUTPUT

    - name: Login to Octopus Deploy 
      uses: OctopusDeploy/login@v1
      with: 
        server: https://wrg.octopus.app
        service_account_id: b45a10cc-1380-480d-ab25-28e36d54cd63

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        role-to-assume: arn:aws:iam::381713788115:role/ryanrousseau-github-org
        role-session-name: githubworkflow
        aws-region: us-west-2

    - name: build website container
      id: build_container
      working-directory: ./DemoApp/
      run: | 
        docker build -f "Dockerfile" \
          --tag octopussolutionsengineering/demoapp-prime:${{ steps.version-generator.outputs.version }} \
          --tag 381713788115.dkr.ecr.us-west-2.amazonaws.com/demo/demoapp-prime:${{ steps.version-generator.outputs.version }} .

    - name: Run Trivy vulnerability scanner on docker container
      uses: aquasecurity/trivy-action@0.32.0
      with:
        image-ref:  octopussolutionsengineering/demoapp-prime:${{ steps.version-generator.outputs.version }}
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Push Docker images
      working-directory: ./DemoApp
      run: |
        docker push octopussolutionsengineering/demoapp-prime:${{ steps.version-generator.outputs.version }}
        docker push 381713788115.dkr.ecr.us-west-2.amazonaws.com/demo/demoapp-prime:${{ steps.version-generator.outputs.version }}

    - uses: OctopusDeploy/push-build-information-action@v3
      name: Push Build Information üêô
      with:
        version: ${{ steps.version-generator.outputs.version }}
        packages: |
          octopussolutionsengineering/demoapp-prime
          demo/demoapp-prime